# Generated by Django 2.2.26 on 2022-08-14 23:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import mibios.models
import mibios_umrad.fields


class Migration(migrations.Migration):

    dependencies = [
        ('mibios_umrad', '0001_initial'),
        migrations.swappable_dependency(settings.OMICS_SAMPLE_MODEL),
        ('mibios_omics', '0004_auto_20220807_1422'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alignment',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
            ],
            managers=[
                ('loader', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Contig',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('fasta_offset', models.PositiveIntegerField(blank=True, default=None, help_text='offset of first byte of fasta (or similar) header, if there is one, otherwise first byte of sequence', null=True)),
                ('fasta_len', models.PositiveIntegerField(blank=True, default=None, help_text='length of sequence record in bytes, header+sequence including internal and final newlines or until EOF.', null=True)),
                ('length', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('bases', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('coverage', models.DecimalField(blank=True, decimal_places=4, default=None, max_digits=10, null=True)),
                ('reads_mapped', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('rpkm', models.DecimalField(blank=True, decimal_places=4, default=None, max_digits=10, null=True)),
                ('frags_mapped', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('fpkm', models.DecimalField(blank=True, decimal_places=4, default=None, max_digits=10, null=True)),
                ('contig_id', mibios_umrad.fields.AccessionField(max_length=50, prefix='CLUSTER:', unique=False)),
                ('bin_m93', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='mibios_omics.BinMET93')),
                ('bin_m97', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='mibios_omics.BinMET97')),
                ('bin_m99', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='mibios_omics.BinMET99')),
                ('bin_max', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='mibios_omics.BinMAX')),
                ('lca', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mibios_umrad.Taxon')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.OMICS_SAMPLE_MODEL)),
                ('taxid', models.ManyToManyField(related_name='classified_contig', to='mibios_umrad.TaxID')),
            ],
            options={
                'default_manager_name': 'objects',
                'unique_together': {('sample', 'contig_id')},
            },
        ),
        migrations.RemoveField(
            model_name='gene',
            name='seq_bytes',
        ),
        migrations.RemoveField(
            model_name='gene',
            name='seq_offset',
        ),
        migrations.RemoveField(
            model_name='protein',
            name='seq_bytes',
        ),
        migrations.RemoveField(
            model_name='protein',
            name='seq_offset',
        ),
        migrations.RemoveField(
            model_name='sample',
            name='contigs_ok',
        ),
        migrations.AddField(
            model_name='gene',
            name='fasta_len',
            field=models.PositiveIntegerField(blank=True, default=None, help_text='length of sequence record in bytes, header+sequence including internal and final newlines or until EOF.', null=True),
        ),
        migrations.AddField(
            model_name='gene',
            name='fasta_offset',
            field=models.PositiveIntegerField(blank=True, default=None, help_text='offset of first byte of fasta (or similar) header, if there is one, otherwise first byte of sequence', null=True),
        ),
        migrations.AddField(
            model_name='protein',
            name='fasta_len',
            field=models.PositiveIntegerField(blank=True, default=None, help_text='length of sequence record in bytes, header+sequence including internal and final newlines or until EOF.', null=True),
        ),
        migrations.AddField(
            model_name='protein',
            name='fasta_offset',
            field=models.PositiveIntegerField(blank=True, default=None, help_text='offset of first byte of fasta (or similar) header, if there is one, otherwise first byte of sequence', null=True),
        ),
        migrations.AddField(
            model_name='sample',
            name='contig_abundance_loaded',
            field=models.BooleanField(default=False, help_text='contig abundance/rpkm data data loaded'),
        ),
        migrations.AddField(
            model_name='sample',
            name='contig_fasta_loaded',
            field=models.BooleanField(default=False, help_text='contig fasta data loaded'),
        ),
        migrations.AddField(
            model_name='sample',
            name='gene_abundance_loaded',
            field=models.BooleanField(default=False, help_text='gene abundance/rpkm data loaded'),
        ),
        migrations.AddField(
            model_name='sample',
            name='gene_alignment_hits_loaded',
            field=models.BooleanField(default=False, help_text='gene alignment hits to UniRef100 loaded'),
        ),
        migrations.AddField(
            model_name='sample',
            name='gene_fasta_loaded',
            field=models.BooleanField(default=False, help_text='gene fasta data loaded'),
        ),
        migrations.AddField(
            model_name='sample',
            name='meta_data_loaded',
            field=models.BooleanField(default=False, help_text='meta data successfully loaded'),
        ),
        migrations.AddField(
            model_name='sample',
            name='metag_pipeline_reg',
            field=models.BooleanField(default=False, help_text='is registered in metagenomic pipeline, has tracking ID'),
        ),
        migrations.AlterField(
            model_name='gene',
            name='contig',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mibios_omics.Contig'),
        ),
        migrations.AlterField(
            model_name='gene',
            name='lca',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mibios_umrad.Taxon'),
        ),
        migrations.AlterField(
            model_name='ncrna',
            name='contig',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mibios_omics.Contig'),
        ),
        migrations.DeleteModel(
            name='ContigCluster',
        ),
        migrations.AddField(
            model_name='alignment',
            name='gene',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mibios_omics.Gene'),
        ),
        migrations.AddField(
            model_name='alignment',
            name='ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mibios_umrad.UniRef100'),
        ),
        migrations.AlterUniqueTogether(
            name='alignment',
            unique_together={('gene', 'ref')},
        ),
    ]
