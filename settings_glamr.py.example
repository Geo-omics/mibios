"""
Example settings for a mibios/glamr instance

Copy this file as settings.py into the instance's base directory.  The settings
below that, in the original example file, are not commented out, show the
default and need most likely be adjusted to make the site run.  Other,
out-commented example settings show the defaults for a production site and are
settings that are suggested to be modified for a different environment (e.g. in
development).  There are many more settings in the mibios.glamr.settings and
mibios.ops.settings modules and / or django.conf.settings that can be
overwritten here.
"""
from pathlib import Path
from mibios.glamr.settings import *  # noqa:F403


### Set to True for development but never in production deployment
# DEBUG = False

### Set this to False when running the runserver command on localhost
# SECURE_SSL_REDIRECT = True

### Add additional apps here:
# INSTALLED_APPS.append('django_extensions')

# User switch magic: needs the remote user injection middleware and set
# ASSUME_IDENTIY = ('alice', 'bob') so when user bob logs in through the web
# server the middleware will make it look as if alice is authenticated.  In
# development, e.g. when using the shell or runserver commands let
# ASSUME_IDENTITY = ('', 'bob') assume bob's identity.
#
# MIDDLEWARE = ['mibios.ops.utils.RemoteUserInjection'] + MIDDLEWARE
# ASSUME_IDENTITY = ('', 'bob')

### List of contacts for site adminitrators
# ADMINS = [(<your name>, <email@address>)]

### For production, set STATIC_ROOT to the directory containing static files,
### relative to your instance's base directory
# STATIC_ROOT = 'static'

### URL for static files
# STATIC_URL = '/static/'

### Directory relative to the base where download files get stored
# MEDIA_ROOT = ''
# MEDIA_ROOT = './media_root'

### URL path for downloads
# MEDIA_URL = '/download/'

### Location of SQLite3 database file
# DATABASES['default']['NAME'] = 'file:db.sqlite3?mode=rw'
# DATABASES['default']['NAME'] = './db.sqlite3'
### Postgresql config:
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'my_database',
#         'USER': 'my_dbuser',
#         'PASSWORD': 'geheim',
#         'HOST': '127.0.0.1',
#         'PORT': '5432',
#     },
# }

# SITE_NAME = 'GLAMR'
# SITE_NAME_VERBOSE = 'GLAMR DB test site'

### Allowed host settings:
# ALLOWED_HOSTS = ['localhost', '127.0.0.1']  # default setting
# ALLOWED_HOSTS += ['my.server.domain.name']
# ALLOWED_HOSTS = ['my.server.domain.name']

### Uncomment this do disable caching, for testing/debugging only
# CACHES['default']['BACKEND'] = 'django.core.cache.backends.dummy.DummyCache'

### Settings for umrad data loading
# UMRAD_ROOT = Path('/path/to/UMRAD')
# UMRAD_VERSION = 'DEV_0'
# UNIREF100_INFO_PATH = Path('path/to/UNIREF100_INFO_special.txt')  # noqa:E501
# IMPORT_DIFF_DIR = '/path/to/import_diffs/'

### Settings for omics data loading
# OMICS_DATA_ROOT = Path('/some/where/GLAMR')
# OMICS_DATA_VERSION = 'JAN_2022'
# AMPLICON_PIPELINE_BASE = '/some/path/'
### Settings for glamr data loading
# GLAMR_META_ROOT = Path('/path/to/GLAMR-Metadata')

### Uncomment to make sqlite's spellfixing work
### path must end in name of spellfix.so without .so suffix
# SPELLFIX_EXT_PATH = '/path/to/spellfix'
