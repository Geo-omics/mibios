# Generated by Django 2.2.14 on 2020-10-09 13:57
# and manually modified

from django.db import migrations, models


class Migration(migrations.Migration):
    """
    Move the OTU type/kind field from OTU to AnalysisProject table
    """

    dependencies = [
        ('mibios_seq', '0013_auto_20201009_0953'),
    ]

    def forward(apps, schema_editor):
        """
        Aggregate OTU.kind values into project.otu_type

        Will check that all of a project's OTUs have the same type
        """
        OTU = apps.get_model('mibios_seq', 'OTU')
        AnalysisProject = apps.get_model('mibios_seq', 'AnalysisProject')

        ASV_KIND = 'ASV'

        projects = AnalysisProject.objects.all()
        for i in [None] + list(projects):

            qs = OTU.objects.filter(project=i)
            if not qs.exists():
                # project does not own OTUs, must be ASV
                i.otu_type = ASV_KIND
                i.save()
                continue

            # below branch never tested, did not have such data:
            # order_by() to clears order to make distinct() on 'kind' work
            # (a known issue)
            kinds = qs.values_list('kind', flat=True).order_by().distinct()

            if len(kinds) == 1:
                if i is None:
                    if kinds[0] != ASV_KIND:
                        raise RuntimeError('non-ASV OTUs are missing project')
                else:
                    i.otu_type = kinds[0]
                    i.save()
            else:
                raise RuntimeError(
                    f'expected unique OTU type but got {kinds} for project {i}'
                )

        OTU.objects.all().update(kind=ASV_KIND, prefix='ASV')

    def reverse(apps, schema_editor):
        """
        Copy project's otu_type into owned OTUs

        Unowned OTUs are ASVs
        """
        OTU = apps.get_model('mibios_seq', 'OTU')
        AnalysisProject = apps.get_model('mibios_seq', 'AnalysisProject')

        ASV_KIND = 'ASV'
        for i in AnalysisProject.objects.exclude(otu_type=ASV_KIND):
            OTU.objects.filter(project=i).update(kind=i.otu_type)

        OTU.objects.filter(project=None).update(kind=ASV_KIND)

    operations = [
        migrations.AddField(
            model_name='analysisproject',
            name='otu_type',
            field=models.CharField(choices=[('ASV', 'ASV'), ('97pct', '97% OTU')], default='foo', max_length=5, verbose_name='OTU type'),
            preserve_default=False,
        ),
        migrations.AlterField(
            # allow null here to get the reverse to work
            model_name='otu',
            name='kind',
            field=models.CharField(choices=[('ASV', 'ASV'), ('97pct', '97% OTU')], default='ASV', max_length=5, verbose_name='OTU type', null=True, blank=True),
        ),
        migrations.RunPython(forward, reverse),
        migrations.RemoveField(
            model_name='otu',
            name='kind',
        ),
    ]
