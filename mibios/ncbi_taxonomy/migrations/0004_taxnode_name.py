# Generated by Django 3.2.19 on 2024-10-08 17:25
# plus manual change

from django.db import migrations, models
import django.db.models.manager
import mibios.ncbi_taxonomy.managers


def fwd(apps, schema_editor):
    """
    Populate the name field with the scientific name

    This is only needed once for the production DB for the transition, future
    migrations would presumably operate on an empty DB as the TaxName loader
    will populate the nodes' name field.
    """
    TaxName = apps.get_model('ncbi_taxonomy', 'TaxName')
    TaxNode = apps.get_model('ncbi_taxonomy', 'TaxNode')

    if not TaxNode.objects.filter(name='').exists():
        return

    # Code below is similar to TaxName.loader.populate_sci_names()
    NAME_CLASS_SCI = 11
    names = dict(
        TaxName.objects.filter(name_class=NAME_CLASS_SCI)
        .values_list('node_id', 'name')
    )
    nodes = TaxNode.objects.only('pk')
    for obj in nodes:
        obj.name = names[obj.pk]
    # With regular bulk_update on sqlite about 8min; on postgres batch size
    # <5000 also has acceptable speed
    TaxNode.loader.fast_bulk_update(nodes, ['name'], batch_size=100000)


class Migration(migrations.Migration):

    dependencies = [
        ('ncbi_taxonomy', '0003_auto_20241008_1319'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='taxnode',
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('loader', mibios.ncbi_taxonomy.managers.TaxNodeLoader()),
            ],
        ),
        migrations.AddField(
            model_name='taxnode',
            name='name',
            field=models.TextField(default='', verbose_name='scientific name'),
            preserve_default=False,
        ),
        migrations.RunPython(fwd, migrations.RunPython.noop),
    ]
