# Generated by Django 2.2.25 on 2022-02-26 15:40

from django.db import migrations, models
import django.db.models.deletion
import mibios.models
import mibios_umrad.fields
import mibios_umrad.model_utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Compound',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='CompoundEntry',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('accession', models.CharField(max_length=40, unique=True)),
                ('db', models.CharField(choices=[('Biocyc', 'b'), ('ChEBI', 'c'), ('HMDB', 'h'), ('InChI', 'i'), ('KEGG', 'k'), ('PubChem', 'p')], db_index=True, max_length=1)),
                ('formula', models.CharField(blank=True, max_length=32)),
                ('charge', models.SmallIntegerField(blank=True, null=True)),
                ('mass', models.CharField(blank=True, max_length=16)),
                ('compound', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group', to='mibios_umrad.Compound')),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='CompoundName',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('entry', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'ordering': ['entry'],
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='FuncRefDBEntry',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('accession', mibios_umrad.fields.AccessionField()),
                ('db', models.CharField(db_index=True, max_length=4)),
            ],
            options={
                'verbose_name': 'Function Ref DB Entry',
                'verbose_name_plural': 'Func Ref DB Entries',
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='FunctionName',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('entry', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'ordering': ['entry'],
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Lineage',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('entry', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name': 'subcellular location',
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Metal',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('entry', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'ordering': ['entry'],
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ReactionEntry',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('accession', mibios_umrad.fields.AccessionField()),
                ('db', models.CharField(choices=[('Biocyc', 'b'), ('KEGG', 'k'), ('RHEA', 'r')], db_index=True, max_length=1)),
                ('bi_directional', models.BooleanField(blank=True, null=True)),
                ('left', models.ManyToManyField(related_name='to_reaction', to='mibios_umrad.CompoundEntry')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mibios_umrad.Reaction')),
                ('right', models.ManyToManyField(related_name='from_reaction', to='mibios_umrad.CompoundEntry')),
            ],
            options={
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('taxid', models.PositiveIntegerField(unique=True, verbose_name='NCBI taxid')),
                ('lineage', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mibios_umrad.Lineage')),
            ],
            options={
                'verbose_name_plural': 'taxa',
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Uniprot',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('accession', mibios_umrad.fields.AccessionField(verbose_name='uniprot id')),
            ],
            options={
                'verbose_name': 'Uniprot',
                'verbose_name_plural': 'Uniprot',
                'abstract': False,
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='UniRef100',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('accession', mibios_umrad.fields.AccessionField(prefix='UNIREF100_')),
                ('length', models.PositiveIntegerField(blank=True, null=True)),
                ('uniref90', mibios_umrad.fields.AccessionField(prefix='UNIREF90_', unique=False)),
                ('signal_peptide', models.CharField(blank=True, default='', max_length=32)),
                ('tms', models.CharField(blank=True, default='', max_length=128)),
                ('dna_binding', models.CharField(blank=True, default='', max_length=128)),
                ('tcdb', models.CharField(blank=True, default='', max_length=128)),
                ('biocyc_reactions', models.ManyToManyField(related_name='uniref_biocyc', to='mibios_umrad.ReactionEntry')),
                ('function_names', models.ManyToManyField(to='mibios_umrad.FunctionName')),
                ('function_refs', models.ManyToManyField(to='mibios_umrad.FuncRefDBEntry')),
                ('kegg_reactions', models.ManyToManyField(related_name='uniref_kegg', to='mibios_umrad.ReactionEntry')),
                ('lineage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mibios_umrad.Lineage')),
                ('metal_binding', models.ManyToManyField(to='mibios_umrad.Metal')),
                ('rhea_reactions', models.ManyToManyField(related_name='uniref_rhea', to='mibios_umrad.ReactionEntry')),
                ('subcellular_locations', models.ManyToManyField(to='mibios_umrad.Location')),
                ('taxa', models.ManyToManyField(to='mibios_umrad.Taxon')),
                ('trans_compounds', models.ManyToManyField(related_name='uniref_trans', to='mibios_umrad.CompoundEntry')),
                ('uniprot', models.ManyToManyField(to='mibios_umrad.Uniprot')),
            ],
            options={
                'verbose_name': 'UniRef100',
                'verbose_name_plural': 'UniRef100',
            },
            bases=(mibios_umrad.model_utils.LoadMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TaxName',
            fields=[
                ('id', mibios.models.AutoField(primary_key=True, serialize=False)),
                ('rank', models.PositiveSmallIntegerField(choices=[(0, 'root'), (1, 'domain'), (2, 'phylum'), (3, 'klass'), (4, 'order'), (5, 'family'), (6, 'genus'), (7, 'species'), (8, 'strain')])),
                ('name', models.CharField(db_index=True, max_length=64)),
            ],
            options={
                'verbose_name': 'taxonomic name',
                'abstract': False,
                'default_manager_name': 'objects',
                'unique_together': {('rank', 'name')},
            },
        ),
        migrations.AddField(
            model_name='lineage',
            name='domain',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_dom_rel', to='mibios_umrad.TaxName'),
        ),
        migrations.AddField(
            model_name='lineage',
            name='family',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_fam_rel', to='mibios_umrad.TaxName'),
        ),
        migrations.AddField(
            model_name='lineage',
            name='genus',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_gen_rel', to='mibios_umrad.TaxName'),
        ),
        migrations.AddField(
            model_name='lineage',
            name='klass',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_cls_rel', to='mibios_umrad.TaxName', verbose_name='class'),
        ),
        migrations.AddField(
            model_name='lineage',
            name='order',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_ord_rel', to='mibios_umrad.TaxName'),
        ),
        migrations.AddField(
            model_name='lineage',
            name='phylum',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_phy_rel', to='mibios_umrad.TaxName'),
        ),
        migrations.AddField(
            model_name='lineage',
            name='species',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_sp_rel', to='mibios_umrad.TaxName'),
        ),
        migrations.AddField(
            model_name='lineage',
            name='strain',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tax_str_rel', to='mibios_umrad.TaxName'),
        ),
        migrations.AddField(
            model_name='funcrefdbentry',
            name='names',
            field=models.ManyToManyField(to='mibios_umrad.FunctionName'),
        ),
        migrations.AddField(
            model_name='compoundentry',
            name='names',
            field=models.ManyToManyField(to='mibios_umrad.CompoundName'),
        ),
        migrations.AlterUniqueTogether(
            name='lineage',
            unique_together={('domain', 'phylum', 'klass', 'order', 'family', 'genus', 'species', 'strain')},
        ),
    ]
